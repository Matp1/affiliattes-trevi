generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  sku         String?
  category    String
  imageUrl    String[]
  variants    Json
  createdBy   String    @default("Usuário não encontrado")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      String   @default("user") // Adiciona campo para controle de permissões (user/admin)
  avatarUrl String?
  level     Int      @default(1) // Nível do usuário (1 a 5)
  orders    Order[] // Define a relação inversa para os pedidos do usuário
  isAdmin   Boolean  @default(false) // Novo campo para verificar se é admin
  createdAt DateTime @default(now()) // Timestamp para criação
  phone     String?  // Novo campo de telefone
  createdBy String?  // ID do admin que criou esse usuário 
  document  String?
  adress    Json?
  profileCompleted Boolean @default(false) // ✅ Novo campo
  hasAcceptedTerms Boolean @default(false)
  tipoPessoa  String?
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  items      Json
  totalPrice Float
  commission Float? 
  orderName  String   @default("Pedido sem nome")
  status     String   @default("Pendente") // pending, paid, shipped, delivered
  adress     Json?
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
